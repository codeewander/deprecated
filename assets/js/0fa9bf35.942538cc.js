(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{165:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=a.a.createContext({}),c=function(e){var n=a.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return a.a.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},h=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(t),h=r,b=u["".concat(l,".").concat(h)]||u[h]||p[h]||i;return t?a.a.createElement(b,o(o({ref:n},d),{},{components:t})):a.a.createElement(b,o({ref:n},d))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=h;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=t[d];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},82:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return c}));var r=t(3),a=t(7),i=(t(0),t(165)),l={id:"linked-list",title:"\u93c8\u7d50\u4e32\u5217(Linked Lists)",keywords:["Algorithm","Linked Lists"]},o={unversionedId:"algorithm/linked-list",id:"algorithm/linked-list",isDocsHomePage:!1,title:"\u93c8\u7d50\u4e32\u5217(Linked Lists)",description:"- \u5206\u70ba\u55ae\u5411\u93c8\u7d50\u4e32\u5217\u8207\u96d9\u5411\u93c8\u7d50\u4e32\u5217",source:"@site/docs/algorithm/linked-list.md",slug:"/algorithm/linked-list",permalink:"/docs/algorithm/linked-list",version:"current",sidebar:"Docs",previous:{title:"\u9663\u5217 Array",permalink:"/docs/algorithm/array"},next:{title:"\u96dc\u6e4a\u8868(Hash Table)",permalink:"/docs/algorithm/hash-table"}},s=[{value:"\u5275\u5efa\u55ae\u5411\u93c8\u7d50\u4e32\u5217",id:"\u5275\u5efa\u55ae\u5411\u93c8\u7d50\u4e32\u5217",children:[]},{value:"\u5275\u5efa\u96d9\u5411\u93c8\u7d50\u4e32\u5217",id:"\u5275\u5efa\u96d9\u5411\u93c8\u7d50\u4e32\u5217",children:[]},{value:"\u55ae\u5411\u93c8\u7d50 v.s. \u96d9\u5411\u93c8\u7d50",id:"\u55ae\u5411\u93c8\u7d50-vs-\u96d9\u5411\u93c8\u7d50",children:[]}],d={toc:s};function c(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\u5206\u70ba",Object(i.b)("inlineCode",{parentName:"li"},"\u55ae\u5411\u93c8\u7d50\u4e32\u5217"),"\u8207",Object(i.b)("inlineCode",{parentName:"li"},"\u96d9\u5411\u93c8\u7d50\u4e32\u5217"))),Object(i.b)("p",null,"\u55ae\u5411\u93c8\u7d50\u4e32\u5217\n",Object(i.b)("img",{parentName:"p",src:"https://i.imgur.com/dYvoADE.png",alt:null})),Object(i.b)("p",null,"\u96d9\u5411\u93c8\u7d50\u4e32\u5217\n",Object(i.b)("img",{parentName:"p",src:"https://i.imgur.com/1Tl0SUT.png",alt:null})),Object(i.b)("p",null,"\u7279\u6027\uff1a"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\u6bcf\u500b Linked List \u90fd\u6709 head \u548c tail\uff0ctail \u6307\u5411 null"),Object(i.b)("li",{parentName:"ul"},"\u6bcf\u4e00\u500b Node \u6703\u6709 value \u548c pointer"),Object(i.b)("li",{parentName:"ul"},"\u512a\u9ede\uff1a(1)\u5feb\u901f insert \u548c delete(2)\u6709\u9806\u5e8f(3)size \u5f48\u6027"),Object(i.b)("li",{parentName:"ul"},"\u7f3a\u9ede\uff1a(1)lookup \u901f\u5ea6\u6162(2)\u4f54\u7528\u8f03\u591a\u8a18\u61b6\u9ad4\u7a7a\u9593")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-javascript"},"//\u4e00\u822c\u9663\u5217\nconst basket = ['apples','grapes','pears']\n\n//lined list\nlinked list : apples -> grapes -> pears\n\n//\u5132\u5b58\u8a18\u61b6\u9ad4\u4f4d\u7f6e\napples\n8944  -> grapes\n          8000 -> pears\n                   333  -> null\n")),Object(i.b)("h3",{id:"\u5275\u5efa\u55ae\u5411\u93c8\u7d50\u4e32\u5217"},"\u5275\u5efa\u55ae\u5411\u93c8\u7d50\u4e32\u5217"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-javascript"},"// 10 --\x3e5 --\x3e16\nclass Node {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n}\n\nclass LinkedList {\n  constructor(value) {\n    this.head = {\n      value: value,\n      next: null,\n    };\n    this.tail = this.head;\n    this.length = 1;\n  }\n  append(value) {\n    const newNode = new Node(value);\n    this.tail.next = newNode;\n    this.tail = newNode;\n    this.length++;\n    return this;\n  }\n  prepend(value) {\n    const newNode = new Node(value);\n    newNode.next = this.head;\n    this.head = newNode;\n    this.length++;\n    return this;\n  }\n  printList() {\n    const array = [];\n    let currentNode = this.head;\n    while (currentNode !== null) {\n      array.push(currentNode.value);\n      currentNode = currentNode.next;\n    }\n    return array;\n  }\n  insert(index, value) {\n    //Check for proper parameters;\n    if (index >= this.length) {\n      return this.append(value);\n    }\n\n    const newNode = new Node(value);\n    const leader = this.traverseToIndex(index - 1);\n    const holdingPointer = leader.next;\n    leader.next = newNode;\n    newNode.next = holdingPointer;\n    this.length++;\n    return this;\n  }\n  traverseToIndex(index) {\n    let counter = 0;\n    let currentNode = this.head;\n    while (counter !== index) {\n      currentNode = currentNode.next;\n      counter++;\n    }\n    return currentNode;\n  }\n  remove(index) {\n    const leader = this.traverseToIndex(index - 1);\n    const unwantedNode = leader.next;\n    const nextNode = unwantedNode.next;\n    leader.next = nextNode;\n    nextNode.prev = leader;\n    this.length--;\n    return this;\n  }\n  //\u53cd\u8f49 list\n  reverse() {\n    if (!this.head.next) {\n      return this.head;\n    }\n    let first = this.head;\n    this.tail = this.head;\n    let second = first.next;\n    while (second) {\n      const temp = second.next;\n      second.next = first;\n      first = second;\n      second = temp;\n    }\n    this.head.next = null;\n    this.head = first;\n    return this;\n  }\n}\n\nlet myLinkedList = new LinkedList(10);\nmyLinkedList.append(5);\nmyLinkedList.append(16);\n\n//Expected result\n// myLinkedList = {\n//     head: {\n//         value: 10\n//         next: {\n//             value: 5\n//             next: {\n//                 value: 16\n//                 next: null\n//             }\n//         }\n//     }\n// }\n")),Object(i.b)("h3",{id:"\u5275\u5efa\u96d9\u5411\u93c8\u7d50\u4e32\u5217"},"\u5275\u5efa\u96d9\u5411\u93c8\u7d50\u4e32\u5217"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-javascript"},"class Node {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nclass DoubleLinkedList {\n  constructor(value) {\n    this.head = {\n      value: value,\n      next: null,\n      prev: null,\n    };\n    this.tail = this.head;\n    this.length = 1;\n  }\n  // add item from the tail\n  append(value) {\n    const newNode = new Node(value);\n    newNode.prev = this.tail;\n    this.tail.next = newNode;\n    this.tail = newNode;\n    this.length++;\n    return this;\n  }\n  //add item from the head\n  prepend(value) {\n    const newNode = new Node(value);\n    newNode.next = this.head;\n    this.head.prev = newNode;\n    this.head = newNode;\n    this.length++;\n    return this;\n  }\n  printList() {\n    const array = [];\n    let currentNode = this.head;\n    while (currentNode !== null) {\n      array.push(currentNode.value);\n      currentNode = currentNode.next;\n    }\n    return array;\n  }\n  insert(index, value) {\n    //Check for proper parameters;\n    if (index >= this.length) {\n      return this.append(value);\n    }\n    const newNode = new Node(value);\n    const leader = this.traverseToIndex(index - 1);\n    const follower = leader.next;\n    leader.next = newNode;\n    newNode.next = follower;\n    newNode.prev = leader;\n    follower.prev = newNode;\n    this.length++;\n    return this;\n  }\n  traverseToIndex(index) {\n    let counter = 0;\n    let currentNode = this.head;\n    while (counter !== index) {\n      currentNode = currentNode.next;\n      counter++;\n    }\n    return currentNode;\n  }\n  remove(index) {\n    const leader = this.traverseToIndex(index - 1);\n    const unwantedNode = leader.next;\n    leader.next = unwantedNode.next;\n    this.length--;\n    return this;\n  }\n}\n\nconst myLinkedList = new DoubleLinkedList(10);\nmyLinkedList.append(5);\nmyLinkedList.append(16);\nmyLinkedList.remove(0);\n")),Object(i.b)("h3",{id:"\u55ae\u5411\u93c8\u7d50-vs-\u96d9\u5411\u93c8\u7d50"},"\u55ae\u5411\u93c8\u7d50 v.s. \u96d9\u5411\u93c8\u7d50"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\u8a18\u61b6\u9ad4\u7a7a\u9593\uff1a\u96d9\u5411\u93c8\u7d50 > \u55ae\u5411\u93c8\u7d50"),Object(i.b)("li",{parentName:"ul"},"\u53ef\u7531\u5f8c\u5f80\u524d\u641c\u5c0b\uff1a\u96d9\u5411\u93c8\u7d50")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u6b64\u7b46\u8a18\u4e3b\u8981\u70ba\u6574\u7406 Zero To Mastery: Master the Coding Interview: Data Structures + Algorithms \u4e4b\u8ab2\u7a0b\u5167\u5bb9")),Object(i.b)("h4",{id:"\u53c3\u8003\u8cc7\u6599"},"\u53c3\u8003\u8cc7\u6599"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://pjchender.blogspot.com/2020/05/linked-list.html"},"PJCHENder[\u8cc7\u6599\u7d50\u69cb] Linked List"))))}c.isMDXComponent=!0}}]);